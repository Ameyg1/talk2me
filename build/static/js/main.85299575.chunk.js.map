{"version":3,"sources":["components/userlist.js","components/navbar.js","components/bottomnav.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","initialState","Person","AlignItemsList","classes","useState","state","setState","useEffect","length","axios","get","then","response","console","log","JSON","stringify","data","attendees","List","className","map","person","key","id","ListItem","alignItems","ListItemAvatar","size","name","ListItemText","primary","secondary","title","comany","lookingfor","Typography","component","variant","color","href","fontSize","facebook","twitter","linkedin","Divider","grow","flexGrow","menuButton","marginRight","spacing","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","height","pointerEvents","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","InputBase","placeholder","input","inputProps","SimpleBottomNavigation","value","setValue","BottomNavigation","onChange","newValue","showLabels","BottomNavigationAction","label","icon","App","style","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.85299575.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport UserAvatar from 'react-user-avatar';\nimport Typography from '@material-ui/core/Typography';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport axios from 'axios';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport MailIcon from '@material-ui/icons/Mail';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport { flexbox } from '@material-ui/system';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 'auto',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\nconst initialState = {\n  Person: [],\n};\n\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n      if(state.Person.length <= 0) {\n        axios.get(\"https://talk2meapp.azurewebsites.net/api/talktome\").then((response) => {\n            console.log(JSON.stringify(response.data.attendees));\n            setState( {\n                Person: response.data.attendees\n              });\n        });\n      }\n  });\n\n  return (\n    <List className={classes.root}>\n      {\n      \n      state.Person.map(person => {\n          console.log(state.Person);\n          return (<div key={person.id}><ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <UserAvatar size=\"48\" name={person.name} />\n        </ListItemAvatar>\n        <ListItemText\n          primary={person.name}\n          secondary= {<div><span>{person.title}<span>,{person.comany}</span> </span> \n          <div>{person.lookingfor} </div>\n              <div>\n            <span>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                <a href=\"mailto://${person.email}\"><MailIcon color =\"primary\" fontSize=\"small\"/></a>\n              </Typography>\n              \n              </span>\n              \n              <span>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                <a href={person.facebook}><FacebookIcon fontSize=\"small\"/></a>\n              </Typography>\n              \n              </span>\n              <span>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n               <a href={person.twitter}> <TwitterIcon fontSize=\"small\"/> </a>\n               \n              </Typography>\n              \n              </span>\n              <span>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                <a href={person.linkedin}><LinkedInIcon fontSize=\"small\"/></a>\n                \n              </Typography>\n              \n              </span>\n              \n</div>\n\n            </div>\n            }\n          \n        />\n      </ListItem>\n      \n      <Divider variant=\"inset\" component=\"li\" /> </div>)})}\n    </List>\n  );\n}\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport EventIcon from '@material-ui/icons/Event';\nimport { MenuList } from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show chats\" color=\"inherit\">\n          <Badge badgeContent={0} color=\"secondary\">\n            <ChatIcon />\n          </Badge>\n        </IconButton>\n        <p>Chat</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show Events\" color=\"inherit\">\n          <Badge badgeContent={1} color=\"secondary\">\n            <EventIcon />\n          </Badge>\n        </IconButton>\n        <p>Event</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            KUNEKT\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport EventIcon from '@material-ui/icons/Event';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"auto\", \n\n  },\n});\n\nexport default function SimpleBottomNavigation() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  return (\n    <BottomNavigation\n      value={value}\n      onChange={(event, newValue) => {\n        setValue(newValue);\n      }}\n      showLabels\n      className={classes.root}\n    >\n      <BottomNavigationAction label=\"Event\" icon={<EventIcon />} />\n      <BottomNavigationAction label=\"Chat\" icon={<ChatIcon />} />\n      <BottomNavigationAction label=\"Profile\" icon={<AccountCircleIcon />} />\n    </BottomNavigation>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nimport UserList from './components/userlist';\nimport Navbar from './components/navbar';\nimport BottomNav from './components/bottomnav';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Navbar />\n      <UserList />\n      <div style={{flexGrow: 1}}></div>\n      <BottomNav />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}